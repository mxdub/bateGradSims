% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling_strategies.R
\name{sampling_prorata}
\alias{sampling_prorata}
\title{Prorata sampling}
\usage{
sampling_prorata(
  fertilized_eggs,
  n_males,
  total_samples = 1000,
  by_female_prop = NULL,
  min_threshold = 0,
  undercount_female = "remove",
  upsample_strategy = "s1",
  upsampling_plot = FALSE
)
}
\arguments{
\item{fertilized_eggs}{List of size n_females containing father for each fertilized eggs (from e.g., pollen_competition() function) (no default)}

\item{n_males}{Number of males (no default)}

\item{total_samples}{Total number of eggs to be sample (default 1000)}

\item{by_female_prop}{Proportion of eggs to be sample by female (no default)}

\item{min_threshold}{Minimal threshold for eggs by females (see details, default : 0)}

\item{undercount_female}{Which strategy to use when some females doesn't have enough eggs to be sample ? (see details, default 'remove')}

\item{upsample_strategy}{Which strategy to use ........}

\item{upsampling_plot}{Should upsampling effects (i.e. deviations from exact proportions) be plotted ? (default FALSE)}
}
\value{
Sampled fertilized eggs
}
\description{
Samples females eggs proportionally to their total eggs count (So call 'Prorata Strategy', see details)
}
\details{
(Should be kept as an internal function ?)

Sample eggs using a 'Prorata' strategy (i.e. sample eggs by female proportionally to their total eggs count).
This proportion is determined using either total_samples or directly by_female_prop argument
(thus at least one should be provided if not using the default value. If both are provided, the by_female_prop will be used).
When computing the number of eggs to be sampled, the value is rounded.

In some cases, some females might not have enough eggs to sample.
Two cases can be distinguished: (a) total eggs * proportion to be sampled < min_threshold and total eggs < min_threshold,
(b) total eggs * proportion to be sampled < min_threshold and total eggs >= min_threshold.

Three strategies can be used in these cases : (i) 'keep' strategy, (ii) 'remove' strategy, and (iii) 'remove_and_upsample' strategy.
The 'keep' strategy actually does nothing (some females might then have a sampled number < min_threshold),
the 'remove' strategy doesn't consider females w/o enough eggs (i.e., in cases (a) and (b)), and will be NA in the output,
the 'remove_and_upsample' doesn't consider females in cases (a), but upsample females (to min_threshold) in (b) case.

(Should add possibility to just upsample females to their total eggs without removing from others - meaning the total samples increases)
For now, two upsampling strategies (which keep total eggs to be sampled constant) are implemented.
(i) 's1' and (ii) 's2' strategies. 's1' strategy removes recursively one eggs from the female with the larger eggs count to allow
one more eggs to be sampled from females that are below min_threshold. The 's2' strategy operate differently; when n eggs have to be redistributed
then one eggs is removed from the n first females (if possible) with the larger eggs counts, if the number of females above the threshold
is less than n, then, the operation is done several times.

Each strategy leads to a different re-repartion (either 'truncating' each side of the distribution - s1,
 or 'truncating' at left and homogeneously reduced sampled eggs at right - s2) - the redistribution can be plotted by setting upsampling_plot arg to TRUE.

Note that upsampling might not always be possible (while keeping constant total), in such cases a error message will be prompted.

Carefull when number of eggs by idv is low ... not sure about the behavior (rounding close from zero) - might need an update

What to do when theo_perc * total eggs ~ e.g., 0.3 (e.g. an idv with 4 eggs, and theo_prec = 1\%) - take at least one, or not ?
}
